---
title: Troubleshooting Anti-Virus
owner: Platform Security & Compliance Team
---

<strong><%= modified_date %></strong>

This topic provides instructions for troubleshooting <%= vars.product_full %>
and verifying that it is protecting your <%= vars.ops_manager %> deployment.

## <a id="installation"></a> Installation Issues

### <a id="fails-to-apply"></a> <%= vars.ops_manager %> Fails to Apply Changes

#### Symptom
Applying changes in <%= vars.ops_manager %> fails.
The bottom of the changelog contains an error message similar to:

<pre class="terminal">...
Started updating job nats > nats/0 (12bfae02-b4af-4104-b2bd-227ff07b2d92) (canary). Done (00:02:31)
  Failed updating job etcd_server > etcd_server/0 (f8e492bf-db09-4d38-8a73-5cf69d7b8a11) (canary): 'etcd_server/0 (f8e492bf-db09-4d38-8a73-5cf69d7b8a11)' is not running after update. Review logs for failed jobs: clamd (00:05:53)

Error 400007: 'etcd_server/0 (f8e492bf-db09-4d38-8a73-5cf69d7b8a11)' is not running after update. Review logs for failed jobs: clamd
</pre>

#### Explanation
The <%= vars.product_full_mirror %> server was unavailable during initial deployment.

#### Solution
Review the manifest file, and replace the `database_mirror` key with the address
of a stable mirror server.
If you do not have a stable mirror server for reliable initial deployment,
use the S3-based mirror: `pivotal-anti-virus-mirror.s3.amazonaws.com`
<hr>

## <a id="updates"></a> Virus Database Update Issues

### <a id="invalid-db"></a> Invalid Database Definitions

#### Symptom

Updating virus definitions writes an error like the following
to the <%= vars.product_short_mirror %> log destination:

 ```
 2019/07/03 20:28:30 file /var/vcap/data/antivirus-mirror/unvalidated/main.cvd rejected: /var/vcap/data/antivirus-mirror/unvalidated/main.cvd is an invalid cvd file: exit status 1
 ```

#### Explanation

The <%= vars.product_short_mirror %> database verifier detected that a virus database
file downloaded from the external database is invalid.

#### Solution

Check that the database files downloaded properly and re-download if necessary.

### <a id="old-db"></a> Old Database Definitions

#### Symptom

Updating virus definitions writes an error like the following
to the <%= vars.product_short_mirror %> log destination:

   ```
   2019/07/03 20:35:34 file /var/vcap/data/antivirus-mirror/unvalidated/daily.cvd rejected: /var/vcap/data/antivirus-mirror/unvalidated/daily.cvd is not newer than /var/vcap/store/antivirus-mirror/validated/daily.cvd
   ```

#### Explanation

The <%= vars.product_short_mirror %> database verifier detected that a virus database
file downloaded from the external database is older than the one most recently
processed by the internal mirror.

#### Solution

Check that the latest version of the database files were downloaded.
If the internal <%= vars.product_short_mirror %> has the latest files, no action is required.

## <a id="runtime"></a> Runtime Issues

### <a id="malware-detection"></a> <%= vars.product_short %> Is Not Detecting Malware

#### Symptom
Malware signature or sample malware is not detected,
even though the ClamAV daemon is properly configured.

#### Explanation
Virus signatures are not up-to-date.

#### Solution
To resolve this issue, verify that:

+ The mirror server is correctly configured.
+ The mirror server is available within the private subnet.
+ At least one hour has elapsed. One hour is the default scan schedule interval.

If the local mirror is up-to-date and <%= vars.product_short %>
is still failing to detect a malware sample, you might have encountered a new threat.
VMware recommends alerting the community using existing channels and reporting
the suspicious file directly to the ClamAV team.

<p class="note"><strong>Note</strong>: VMware does not provide support for ClamAV detection failures,
  mirror coordination, or threat tracking activity.
</p>

<hr>

### <a id='false-positive-clamav'></a> <%= vars.product_short %> Reports False Positives

####Symptom
<%= vars.product_short %> reports a false positive result such as
non-malicious file is reported to be a virus.

####Explanation
<%= vars.product_short %> compares files to its database of known malicious patterns.
<%= vars.product_short %> might detect a non-malicious file as a virus
due to a coincidental similarity to those patterns.

####Solution
Submit false positive reports to <a href="https://www.clamav.net/reports/fp">ClamAV</a>.
You can also subscribe to the ClamAV email list to be kept up-to-date with ClamAV database changes.
It takes about a week for ClamAV to verify and publish a new database.

<hr>

### <a id='cpu-spikes-clamav'></a> CPU Spikes While Using <%= vars.product_short %>

####Symptom
<%= vars.product_short %> is taking more CPU resources than assigned in its configuration.

####Explanation
<%= vars.product_short %> resource consumption is restricted using cgroups.
<%= vars.product_short %> is resource-limited whenever other processes are active.
However, cgroups enables <%= vars.product_short %> to occupy
more CPU resources when all other processes are idle,
because it does not impact their performance.

####Solution
Set the **Enforce CPU limit** field to **Always** in the
**<%= vars.product_short %>** tile.
For instructions, see [Configure Anti-Virus](./install.html#configure).
<hr>

### <a id='out-of-memory'></a> Out of Memory While Using <%= vars.product_short %>

####Symptom
<%= vars.product_short %> fails to start and `/var/log/syslog` reports `Memory cgroup out of memory:
Kill process` on the `clamd` process similar to:

<pre class="terminal">2019-02-20T19:35:40.249205+00:00 localhost kernel: [  254.669948] Memory cgroup out of memory: Kill process 7493 (clamd) score 586 or sacrifice child
2019-02-20T19:35:40.249205+00:00 localhost kernel: [  254.679053] Killed process 7527 (clamd) total-vm:786136kB, anon-rss:626692kB, file-rss:1592kB
</pre>

####Explanation
<%= vars.product_short %> resource consumption is restricted by cgroups.
The `clamd` process is terminated if the memory usage limit is exceeded.
When memory swapping is disabled by other BOSH jobs,
the <%= vars.product_short %> resource requires a larger memory limit.

####Solution
This is expected behavior from cgroups.
To configure the memory limit, configure **Memory limit (in bytes)** in the **<%= vars.product_short %>** tile.

<p class="note warning"><strong>Warning:</strong> When updating the memory limit, ensure that all VMs,
including errand VMs, have sufficient memory resources.
</p>
<hr>

### <a id='insufficient-cpu'></a> Insufficient CPU Limit While Using <%= vars.product_short %>

#### Symptom
<%= vars.product_short %> fails to start during deployment.
However, the `clamd` and `freshclam` processes eventually run.<br>

The deployment failure log looks similar to:

<pre class="terminal">
Task 1071 | 19:40:49 | Updating instance clamav_1: clamav_1/d5cfe4bd-b606-4372-8481-187f4cf57e6c (0) (canary) (00:05:26)
                L Error: 'clamav_1/d5cfe4bd-b606-4372-8481-187f4cf57e6c (0)' is not running after update. Review logs for failed jobs: clamd, freshclam
</pre>
<br>
When you run `bosh -d DEPLOYMENT instances --ps`, you see that the
the `clamd` and `freshclam` processes are running successfully after the failed deployment.

For example:

<pre class="terminal">$ bosh -d clamav_1/d5cfe4bd-b606-4372-8481-187f4cf57e6c instances --ps
Instance                                       Process    Process State  AZ  IPs
clamav_1/d5cfe4bd-b606-4372-8481-187f4cf57e6c  -          running        z1  10.0.0.7
~                                              clamd      running        -   -
~                                              freshclam  running        -   -
</pre>

####Explanation
<%= vars.product_short %> startup is CPU intensive
and, if restricted, can prevent <%= vars.product_short %> from starting up correctly.

#### Solutions
+ Ensure `cpu_limit` is set high enough for <%= vars.product_short %> to execute normally.
If the limit is too strict, <%= vars.product_short %> fails to start.
For example, an n1-standard VM on Google Cloud Platform (GCP) requires `cpu_limit` to be > 45.
To make changes to this limit, configure **CPU limit (percentage)** in the **<%= vars.product_short %>** tile.

+ Set `enforce_cpu_limit` to `false`. This allocates more CPU cycles to ClamAV
if other processes are not using CPU resources.<br>
To disable this limit, set the **Enforce CPU limit** field to **When other processes are using CPU resources** in the **<%= vars.product_short %>** tile.

+ From the **<%= vars.ops_manager %> Installation Dashboard**, navigate to the tile with the failing `antivirus` job.
On **Resource Config**, adjust the **VM Type** for the **<%= vars.product_short %>** job
to have sufficient CPU resources.

### <a id='too-many-files'></a> Too Many Open Files Error While Using <%= vars.product_short_mirror %>

#### Symptom
The <%= vars.product_short_mirror %> log reports that too many log files are open:

<pre class="terminal">
2019/07/29 20:02:41 10.0.0.72 is requesting main.cvd
2019/07/29 20:02:41 http: Accept error: accept tcp 0.0.0.0:80: accept4: too many open files; retrying in 10ms
2019/07/29 20:02:41 http: Accept error: accept tcp 0.0.0.0:80: accept4: too many open files; retrying in 20ms
2019/07/29 20:02:41 http: Accept error: accept tcp 0.0.0.0:80: accept4: too many open files; retrying in 40ms
2019/07/29 20:02:42 http: Accept error: accept tcp 0.0.0.0:80: accept4: too many open files; retrying in 5ms
</pre>

#### Explanation
<%= vars.product_short_mirror %> opens files when a database is requested.
There is a limit to how many files it can open at a time.

#### Solution
Increase the number of <%= vars.product_short_mirror %> instances.
VMware recommends that there is one <%= vars.product_short_mirror %> for every 250 instances where <%= vars.product_short %> is installed.
For more information, see [Scale the Number of Deployed Mirrors](./install-mirror.html#scale-deployed-mirror).


### <a id='backup-restore'></a> Restoring with BOSH Backup and Restore Fails

#### Symptom

When using <%= vars.product_short_mirror %>,
errors occur when you redeploy <%= vars.app_runtime_full %> while restoring with BOSH Backup and Restore (BBR). For information about redeploying <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>),
see [Step 12: Redeploy <%= vars.app_runtime_abbr %>](https://docs.pivotal.io/platform/customizing/backup-restore/restore-pcf-bbr.html#redeploy-ert).

#### Explanation

<%= vars.product_short_mirror %> must be running before you install <%= vars.product_short %> on
other VMs in your deployment.
Otherwise, <%= vars.product_short_mirror %> might not deploy before
other tiles and dependencies deploy.

If <%= vars.product_short_mirror %> is not running, VMs with <%= vars.product_short %> installed cannot
download the required database signature files.
If this happens, errors and failed deployments occur.

#### Solution
To resolve this issue, you must ensure that <%= vars.product_short_mirror %>
is deployed before restoring your deployment.

To do this:

1. Follow the procedures before _Step 12: Redeploy <%= vars.app_runtime_abbr %>_ in [Restoring Deployments from Backup with BBR](https://docs.pivotal.io/platform/customizing/backup-restore/restore-pcf-bbr.html). Do not apply changes.

1. Exclude <%= vars.product_short_mirror %> from the <%= vars.product_short %> deployment by
following the procedure in
[Exclude <%= vars.product_short_mirror %> during Apply Changes](./changing-ports.html#exclude-mirror).
This ensures that <%= vars.product_short %> is not deployed on the <%= vars.product_short_mirror %>

1. Remove the <%= vars.product_short_mirror %> exclusion
    from the <%= vars.product_short %> configurations by following the procedure in
    [Remove the Exclusion](./changing-ports.html#remove-exclude).

1. Continue to restore your deployment by following the remaining procedures in [Restoring Deployments from Backup with BBR](https://docs.pivotal.io/platform/customizing/backup-restore/restore-pcf-bbr.html).

### <a id='cpu-spikes-clamav-enforce-cpu'></a> CPU Spikes While Enforcing a CPU Limit in <%= vars.product_short %>

####Symptom
<%= vars.product_short %> is using more CPU resources than assigned in its configuration, even with the **Enforce CPU limit** field set to **Always**.

####Explanation
<%= vars.product_short %> resource consumption is restricted using cgroups.
If the VM does not have enough CPU or memory resources, the clamd PID is removed from the `cgroup.procs` file.
This causes <%= vars.product_short %> to ignore the **Enforce CPU limit** setting.

####Solution
Increase the VM size. VMware recommends a minimum VM size of `micro.cpu` (2&nbsp;CPU and 2&nbsp;GB RAM) on GCP.
<hr>
